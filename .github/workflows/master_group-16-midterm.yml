# This workflow builds a Docker image, pushes it to Azure Container Registry (ACR),
# and then deploys it to an Azure App Service.
# It's triggered on any push to the repository.

name: Build and Deploy to Azure App Service

on: [push]

jobs:
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: 'Checkout master'
        uses: actions/checkout@v2

      # Step 2: Sign in to Azure using the credentials stored in a GitHub secret.
      - name: 'Sign in to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Log in to the Azure Container Registry.
      # Note: This uses REGISTRY_USERNAME and REGISTRY_PASSWORD secrets, matching the first example.
      - name: 'Log in to ACR'
        uses: azure/docker-login@v1
        with:
          login-server: group16finalacr.azurecr.io # Your ACR name
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Step 4: Build the Docker image and push it to your ACR.
      # The image is tagged with the unique commit SHA for versioning.
      - name: 'Build and Push to ACR'
        run: |
          docker build . -t g16acr.azurecr.io/group-16-midterm:${{ github.sha }}
          docker push g16acr.azurecr.io/group-16-midterm:${{ github.sha }}

      # Step 5: Deploy the newly pushed image from ACR to your Azure App Service.
      - name: 'Deploy from ACR to App Service'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'group-16-midterm' # Your App Service name
          images: 'group16finalacr.azurecr.io/group-16-midterm:${{ github.sha }}' # Full image name including the commit SHA tag

      # Step 6: Log out of Azure as a cleanup step.
      - name: 'Log out from Azure'
        run: |
          az logout
